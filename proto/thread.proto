syntax = "proto3";
package community;

option go_package = "github.com/Suse-Orphanage/roomy-proto/model";

service Thread {
    rpc GetThread (ThreadRequest) returns (ThreadResponse);
    rpc GetReply (ThreadRequest) returns (ThreadResponse);
    rpc NewThread (NewThreadRequest) returns (ThreadResponse);
    rpc ReplyThread (ReplyThreadRequest) returns (ReplyResponse);
    rpc DeleteThread (DeleteThreadRequest) returns (DeleteThreadResponse);

    rpc LikeThred (LikeThreadRequest) returns (LikeThreadResponse);
    rpc StarThread (StarThreadRequest) returns (StarThreadResponse);
    rpc UnlikeThred (LikeThreadRequest) returns (LikeThreadResponse);
    rpc UnstarThread (StarThreadRequest) returns (StarThreadResponse);

    rpc SearchThread (ThreadSearchRequest) returns (ThreadSearchResponse);
}

message ThreadRequest {
    uint64 ThreadID = 1;
    optional uint32 Page = 16;
}

message Reply {
    uint64 ID = 1;
    string Content = 2;
    uint64 Author = 3;
    repeated Reply Replies = 4;
}

message ThreadResponse {
    uint64 ID = 1;
    string Title = 2;
    string Content = 3;
    uint64 Author = 4;
    uint64 LikeCount = 5;
    uint64 StarCount = 6;
    repeated Reply Replies = 7;
}

message NewThreadRequest {
    string Title = 1;
    string Content = 2;
    uint64 Author = 3;
}

message ReplyThreadRequest {
    uint64 Author = 1;
    string Content = 2;
}

message ReplyResponse {
    uint64 ID = 1;
    string Content = 2;
    uint64 Author = 3;
}

message DeleteThreadRequest {
    uint64 ThreadID = 1;
}

message DeleteThreadResponse {
    bool Success = 1;
}

message LikeThreadRequest {
    uint64 ThreadID = 1;
    uint64 Who = 2;
}

message LikeThreadResponse {
    bool Success = 1;
}

message StarThreadRequest {
    uint64 ThreadID = 1;
    uint64 Who = 2;
}

message StarThreadResponse {
    bool Success = 1;
}

message ThreadSearchRequest {
    string KeyWord = 1;
}

message ThreadSearchResponse {
    repeated ThreadResponse Threads = 1;
}
