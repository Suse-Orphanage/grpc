// thread.proto
// implements thread related feature.

syntax = "proto3";
package community;

option go_package = "github.com/Suse-Orphanage/grpc";

service Thread {
    rpc GetFeed (FeedRequest) returns (FeedResponse);
    rpc GetRecommand (RecommandRequest) returns (RecommandResponse);

    rpc GetThread (ThreadRequest) returns (ThreadResponse);
    rpc GetReply (ThreadRequest) returns (ThreadResponse);
    rpc NewThread (NewThreadRequest) returns (ThreadResponse);
    rpc ReplyThread (ReplyThreadRequest) returns (ReplyResponse);
    rpc DeleteThread (DeleteThreadRequest) returns (DeleteThreadResponse);

    rpc LikeThred (LikeThreadRequest) returns (LikeThreadResponse);
    rpc StarThread (StarThreadRequest) returns (StarThreadResponse);
    rpc UnlikeThred (LikeThreadRequest) returns (LikeThreadResponse);
    rpc UnstarThread (StarThreadRequest) returns (StarThreadResponse);

    rpc SearchThread (ThreadSearchRequest) returns (ThreadSearchResponse);
}

message FeedRequest {
    uint64 UserID = 1;
}

message FeedResponse {
    repeated ThreadResponse Threads = 1;
}

message RecommandRequest {
    uint64 UserID = 1;
}

message RecommandResponse {
    repeated ThreadResponse Threads = 1;
}

message ThreadRequest {
    uint64 ThreadID = 1;
    uint64 UserID = 2;
    uint64 Page = 16;
}

message Reply {
    uint64 ID = 1;
    string Content = 2;
    User Author = 3;
    uint64 ReplyTo = 4;
}

message Comment {
    uint64 ID = 1;
    string Content = 2;
    User Author = 3;
    uint32 Likes = 4;
    bool LikedByMe = 5;
    repeated Reply Replies = 6;
}

message User {
    uint64 ID = 1;
    string Username = 2;
	string Bio = 3;
	bool IsPro = 4;
	string Avatar = 5;
}

message ThreadResponse {
    uint64 ID = 1;
    string Title = 2;
    string Content = 3;
    User Author = 4;
    uint64 Likes = 5;
    uint64 Stars = 6;

    bool StaredByMe = 7;
    bool LikedByMe = 8;

    repeated Comment Comments = 9;
}

message NewThreadRequest {
    string Title = 1;
    string Content = 2;
    uint64 Author = 3;
}

message ReplyThreadRequest {
    uint64 Thread = 1;
    uint64 Author = 2;
    string Content = 3;
}

message ReplyResponse {
    uint64 ID = 1;
    string Content = 2;
    uint64 Author = 3;
}

message DeleteThreadRequest {
    uint64 ThreadID = 1;
    uint64 UserID = 2;
}

message DeleteThreadResponse {
    bool Success = 1;
}

message LikeThreadRequest {
    uint64 ThreadID = 1;
    uint64 Who = 2;
}

message LikeThreadResponse {
    bool Success = 1;
}

message StarThreadRequest {
    uint64 ThreadID = 1;
    uint64 Who = 2;
}

message StarThreadResponse {
    bool Success = 1;
}

message ThreadSearchRequest {
    string KeyWord = 1;
    uint32 Page = 2;
    int32 UserID = 3;
}

message ThreadSearchResponse {
    repeated ThreadResponse Threads = 1;
}
